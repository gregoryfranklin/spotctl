package spotinst

import (
	"reflect"
	"time"
)

type (
	// TypeMeta describes an individual object.
	TypeMeta struct {
		// Kind represents the kind of the resource this object represents.
		Kind string `json:"kind"`
	}

	// ObjectMeta is metadata that all resources must have.
	ObjectMeta struct {
		// Unique ID.
		ID string `json:"id" table:"1,id"`

		// Object name.
		Name string `json:"name" table:"2,name"`

		// CreatedAt represents the timestamp when the cluster has been created.
		CreatedAt time.Time `json:"createdAt" table:"9,created"`

		// UpdatedAt represents the timestamp when the cluster has been updated.
		UpdatedAt time.Time `json:"updatedAt" table:"10,updated"`

		// Obj holds the raw object which is an orchestrator-specific implementation.
		Obj interface{} `json:"-"`
	}

	// Account represents a Spotinst account.
	Account struct {
		// Unique account ID.
		ID string `json:"accountId"`

		// Account name.
		Name string `json:"name"`

		// Organization ID.
		OrganizationID string `json:"organizationId"`

		// External ID generated by the cloud provider bounded with this account.
		ExternalID *string `json:"providerExternalId"` // nullable; used by AWS only
	}

	// OceanCluster represents an Ocean cluster.
	OceanCluster struct {
		// Type's metadata.
		TypeMeta

		// Object's metadata.
		ObjectMeta
	}

	// OceanLaunchSpec represents an Ocean launch spec.
	OceanLaunchSpec struct {
		// Type's metadata.
		TypeMeta

		// Object's metadata.
		ObjectMeta
	}
)

// typeOf returns obj type's name using reflection.
func typeOf(obj interface{}) string { return reflect.TypeOf(obj).Name() }
